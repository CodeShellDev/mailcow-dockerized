#!/bin/bash

fix_broken_dnslist_conf() {

# Fixing issue: #6143. To be removed in a later patch

  local file="${SCRIPT_DIR}/data/conf/postfix/dns_blocklists.cf"
    # Check if the file exists
  if [[ ! -f "$file" ]]; then
      return 1
  fi

  # Check if the file contains the autogenerated comment
  if grep -q "# Autogenerated by mailcow" "$file"; then
      # Ask the user if custom changes were made
      echo -e "\e[91mWARNING!!! \e[31mAn old version of dns_blocklists.cf has been detected which may cause a broken postfix upon startup (see: https://github.com/mailcow/mailcow-dockerized/issues/6143)...\e[0m"
      echo -e "\e[31mIf you have any custom settings in there you might copy it away and adapt the changes after the file is regenerated...\e[0m"
      read -p "Do you want to delete the file now and let mailcow regenerate it properly? [y/n]" response
      if [[ "${response}" =~ ^([yY][eE][sS]|[yY])+$ ]]; then
        rm "$file"
        echo -e "\e[32mdns_blocklists.cf has been deleted and will be properly regenerated"
        return 0
      else
        echo -e "\e[35mOk, not deleting it! Please make sure you take a look at postfix upon start then..."
        return 2
      fi
  fi

}

migrate_solr_config_options() {

  sed -i --follow-symlinks '$a\' mailcow.conf

  if grep -q "SOLR_HEAP" mailcow.conf; then
    echo "Removing SOLR_HEAP in mailcow.conf"
    sed -i '/# Solr heap size in MB\b/d' mailcow.conf
    sed -i '/# Solr is a prone to run\b/d' mailcow.conf
    sed -i '/SOLR_HEAP\b/d' mailcow.conf
  fi

  if grep -q "SKIP_SOLR" mailcow.conf; then
    echo "Removing SKIP_SOLR in mailcow.conf"
    sed -i '/\bSkip Solr on low-memory\b/d' mailcow.conf
    sed -i '/\bSolr is disabled by default\b/d' mailcow.conf
    sed -i '/\bDisable Solr or\b/d' mailcow.conf
    sed -i '/\bSKIP_SOLR\b/d' mailcow.conf
  fi

  if grep -q "SOLR_PORT" mailcow.conf; then
    echo "Removing SOLR_PORT in mailcow.conf"
    sed -i '/\bSOLR_PORT\b/d' mailcow.conf
  fi

  if grep -q "FLATCURVE_EXPERIMENTAL" mailcow.conf; then
    echo "Removing FLATCURVE_EXPERIMENTAL in mailcow.conf"
    sed -i '/\bFLATCURVE_EXPERIMENTAL\b/d' mailcow.conf
  fi

  solr_volume=$(docker volume ls -qf name=^${COMPOSE_PROJECT_NAME}_solr-vol-1)
  if [[ -n $solr_volume ]]; then
    echo -e "\e[34mSolr has been replaced within mailcow since 2025-01.\nThe volume $solr_volume is unused.\e[0m"
    sleep 1
    if [ ! "$FORCE" ]; then
      read -r -p "Remove $solr_volume? [y/N] " response
      if [[ "$response" =~ ^([yY][eE][sS]|[yY])+$ ]]; then
        echo -e "\e[33mRemoving $solr_volume...\e[0m"
        docker volume rm $solr_volume || echo -e "\e[31mFailed to remove. Remove it manually!\e[0m"
        echo -e "\e[32mSuccessfully removed $solr_volume!\e[0m"
      else
        echo -e "Not removing $solr_volume. Run \`docker volume rm $solr_volume\` manually if needed."
      fi
    else
      echo -e "\e[33mForce removing $solr_volume...\e[0m"
      docker volume rm $solr_volume || echo -e "\e[31mFailed to remove. Remove it manually!\e[0m"
      echo -e "\e[32mSuccessfully removed $solr_volume!\e[0m"
    fi
  fi

  # Delete old fts.conf before forced switch to flatcurve to ensure update is working properly
  FTS_CONF_PATH="${SCRIPT_DIR}/data/conf/dovecot/conf.d/fts.conf"
  if [[ -f "$FTS_CONF_PATH" ]]; then
    if grep -q "Autogenerated by mailcow" "$FTS_CONF_PATH"; then
      rm -rf $FTS_CONF_PATH
    fi
  fi
}